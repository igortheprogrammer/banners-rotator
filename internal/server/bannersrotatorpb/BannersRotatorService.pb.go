// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: BannersRotatorService.proto

package bannersrotatorpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BannersRotatorService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_BannersRotatorService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_BannersRotatorService_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Slot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Slot) Reset() {
	*x = Slot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BannersRotatorService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Slot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Slot) ProtoMessage() {}

func (x *Slot) ProtoReflect() protoreflect.Message {
	mi := &file_BannersRotatorService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Slot.ProtoReflect.Descriptor instead.
func (*Slot) Descriptor() ([]byte, []int) {
	return file_BannersRotatorService_proto_rawDescGZIP(), []int{1}
}

func (x *Slot) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Slot) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Banner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Banner) Reset() {
	*x = Banner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BannersRotatorService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Banner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Banner) ProtoMessage() {}

func (x *Banner) ProtoReflect() protoreflect.Message {
	mi := &file_BannersRotatorService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Banner.ProtoReflect.Descriptor instead.
func (*Banner) Descriptor() ([]byte, []int) {
	return file_BannersRotatorService_proto_rawDescGZIP(), []int{2}
}

func (x *Banner) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Banner) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BannersRotatorService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_BannersRotatorService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_BannersRotatorService_proto_rawDescGZIP(), []int{3}
}

func (x *Group) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Group) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Rotation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotId   int64 `protobuf:"varint,1,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
	BannerId int64 `protobuf:"varint,2,opt,name=banner_id,json=bannerId,proto3" json:"banner_id,omitempty"`
}

func (x *Rotation) Reset() {
	*x = Rotation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BannersRotatorService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rotation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rotation) ProtoMessage() {}

func (x *Rotation) ProtoReflect() protoreflect.Message {
	mi := &file_BannersRotatorService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rotation.ProtoReflect.Descriptor instead.
func (*Rotation) Descriptor() ([]byte, []int) {
	return file_BannersRotatorService_proto_rawDescGZIP(), []int{4}
}

func (x *Rotation) GetSlotId() int64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *Rotation) GetBannerId() int64 {
	if x != nil {
		return x.BannerId
	}
	return 0
}

type ClickEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotId   int64 `protobuf:"varint,1,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
	BannerId int64 `protobuf:"varint,2,opt,name=banner_id,json=bannerId,proto3" json:"banner_id,omitempty"`
	GroupId  int64 `protobuf:"varint,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *ClickEvent) Reset() {
	*x = ClickEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BannersRotatorService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClickEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickEvent) ProtoMessage() {}

func (x *ClickEvent) ProtoReflect() protoreflect.Message {
	mi := &file_BannersRotatorService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickEvent.ProtoReflect.Descriptor instead.
func (*ClickEvent) Descriptor() ([]byte, []int) {
	return file_BannersRotatorService_proto_rawDescGZIP(), []int{5}
}

func (x *ClickEvent) GetSlotId() int64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *ClickEvent) GetBannerId() int64 {
	if x != nil {
		return x.BannerId
	}
	return 0
}

func (x *ClickEvent) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type SlotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotId  int64 `protobuf:"varint,1,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
	GroupId int64 `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *SlotRequest) Reset() {
	*x = SlotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BannersRotatorService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotRequest) ProtoMessage() {}

func (x *SlotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_BannersRotatorService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotRequest.ProtoReflect.Descriptor instead.
func (*SlotRequest) Descriptor() ([]byte, []int) {
	return file_BannersRotatorService_proto_rawDescGZIP(), []int{6}
}

func (x *SlotRequest) GetSlotId() int64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *SlotRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

var File_BannersRotatorService_proto protoreflect.FileDescriptor

var file_BannersRotatorService_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x6f, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x23, 0x0a,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x38, 0x0a, 0x04, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x0a, 0x06,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x40, 0x0a, 0x08, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x62, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x0b, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x32, 0xee, 0x03, 0x0a, 0x0e, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x73, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x14, 0x2e, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x73, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x1a, 0x14,
	0x2e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x53, 0x6c, 0x6f, 0x74, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73,
	0x72, 0x6f, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x1a, 0x16,
	0x2e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x15, 0x2e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x73, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x15,
	0x2e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x73, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x17, 0x2e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x72, 0x6f, 0x74,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x45,
	0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x2e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x17, 0x2e, 0x62, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x73, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6c, 0x69, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x73, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x6c, 0x69, 0x63, 0x6b,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x17, 0x2e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x72,
	0x6f, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00,
	0x12, 0x46, 0x0a, 0x0d, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x53, 0x6c, 0x6f,
	0x74, 0x12, 0x1b, 0x2e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x72, 0x6f, 0x74, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0x00, 0x42, 0x15, 0x5a, 0x13, 0x2e, 0x2f, 0x3b, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_BannersRotatorService_proto_rawDescOnce sync.Once
	file_BannersRotatorService_proto_rawDescData = file_BannersRotatorService_proto_rawDesc
)

func file_BannersRotatorService_proto_rawDescGZIP() []byte {
	file_BannersRotatorService_proto_rawDescOnce.Do(func() {
		file_BannersRotatorService_proto_rawDescData = protoimpl.X.CompressGZIP(file_BannersRotatorService_proto_rawDescData)
	})
	return file_BannersRotatorService_proto_rawDescData
}

var file_BannersRotatorService_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_BannersRotatorService_proto_goTypes = []interface{}{
	(*Message)(nil),     // 0: bannersrotator.Message
	(*Slot)(nil),        // 1: bannersrotator.Slot
	(*Banner)(nil),      // 2: bannersrotator.Banner
	(*Group)(nil),       // 3: bannersrotator.Group
	(*Rotation)(nil),    // 4: bannersrotator.Rotation
	(*ClickEvent)(nil),  // 5: bannersrotator.ClickEvent
	(*SlotRequest)(nil), // 6: bannersrotator.SlotRequest
}
var file_BannersRotatorService_proto_depIdxs = []int32{
	1, // 0: bannersrotator.BannersRotator.CreateSlot:input_type -> bannersrotator.Slot
	2, // 1: bannersrotator.BannersRotator.CreateBanner:input_type -> bannersrotator.Banner
	3, // 2: bannersrotator.BannersRotator.CreateGroup:input_type -> bannersrotator.Group
	4, // 3: bannersrotator.BannersRotator.CreateRotation:input_type -> bannersrotator.Rotation
	4, // 4: bannersrotator.BannersRotator.DeleteRotation:input_type -> bannersrotator.Rotation
	5, // 5: bannersrotator.BannersRotator.CreateClickEvent:input_type -> bannersrotator.ClickEvent
	6, // 6: bannersrotator.BannersRotator.BannerForSlot:input_type -> bannersrotator.SlotRequest
	1, // 7: bannersrotator.BannersRotator.CreateSlot:output_type -> bannersrotator.Slot
	2, // 8: bannersrotator.BannersRotator.CreateBanner:output_type -> bannersrotator.Banner
	3, // 9: bannersrotator.BannersRotator.CreateGroup:output_type -> bannersrotator.Group
	0, // 10: bannersrotator.BannersRotator.CreateRotation:output_type -> bannersrotator.Message
	0, // 11: bannersrotator.BannersRotator.DeleteRotation:output_type -> bannersrotator.Message
	0, // 12: bannersrotator.BannersRotator.CreateClickEvent:output_type -> bannersrotator.Message
	2, // 13: bannersrotator.BannersRotator.BannerForSlot:output_type -> bannersrotator.Banner
	7, // [7:14] is the sub-list for method output_type
	0, // [0:7] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_BannersRotatorService_proto_init() }
func file_BannersRotatorService_proto_init() {
	if File_BannersRotatorService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_BannersRotatorService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BannersRotatorService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Slot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BannersRotatorService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Banner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BannersRotatorService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BannersRotatorService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rotation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BannersRotatorService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClickEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BannersRotatorService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_BannersRotatorService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_BannersRotatorService_proto_goTypes,
		DependencyIndexes: file_BannersRotatorService_proto_depIdxs,
		MessageInfos:      file_BannersRotatorService_proto_msgTypes,
	}.Build()
	File_BannersRotatorService_proto = out.File
	file_BannersRotatorService_proto_rawDesc = nil
	file_BannersRotatorService_proto_goTypes = nil
	file_BannersRotatorService_proto_depIdxs = nil
}
